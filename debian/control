Source: golang-github-buengese-sgzip
Maintainer: Debian Go Packaging Team <team+pkg-go@tracker.debian.org>
Uploaders: Drew Parsons <dparsons@debian.org>
Section: golang
Testsuite: autopkgtest-pkg-go
Priority: optional
Build-Depends: debhelper-compat (= 13),
               dh-golang,
               golang-any,
               golang-github-klauspost-compress-dev
Standards-Version: 4.6.1
Vcs-Browser: https://salsa.debian.org/go-team/packages/golang-github-buengese-sgzip
Vcs-Git: https://salsa.debian.org/go-team/packages/golang-github-buengese-sgzip.git
Homepage: https://github.com/buengese/sgzip
Rules-Requires-Root: no
XS-Go-Import-Path: github.com/buengese/sgzip

Package: golang-github-buengese-sgzip-dev
Architecture: all
Multi-Arch: foreign
Depends: golang-github-klauspost-compress-dev,
         ${misc:Depends}
Description: experiments for a seekable gzip for use in rclone based on pgzip (library)
 This is an experimental implementation of gzip that allows seeking in
 the compressed file. In normal gzip files that can only be achieved by
 decompressing from the start and discarding all data until the selected
 offset. This gzip implementation works around this by creating a special
 metadata file that maps uncompressed blocks to compressed blocks
 allowing it to only read the compressed blocks required.
 .
 Due to necessity of being able to start decompression from any block the
 dictionary is reset after every block. This somewhat negatively effects
 compression ratio but is a necessary tradeof in our use case. The gzip
 files created by this library are valid normal gzip files and can be
 decompressed by any other gzip implementation.
 .
 Warning
 .
 This library was purpose build for the rclone compression backend. If
 you are looking for a multithreaded golang gzip implementation you
 should be using klauspost/pgzip (https://github.com/klauspost/pgzip)
 which is the base for this library.
